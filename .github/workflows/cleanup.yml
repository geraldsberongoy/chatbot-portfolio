name: Container Registry Cleanup

on:
  schedule:
    # Run daily at 2 AM UTC
    - cron: "0 2 * * *"
  workflow_dispatch:

env:
  REGISTRY: ghcr.io

jobs:
  cleanup:
    name: Cleanup old container images
    runs-on: ubuntu-latest

    steps:
      - name: Check if package exists
        id: check-package
        run: |
          # Check if the package exists using GitHub API
          PACKAGE_NAME="${{ github.repository }}"

          echo "Checking for package: $PACKAGE_NAME"

          # Use GitHub API to check if package exists
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/users/${{ github.repository_owner }}/packages/container/${{ github.event.repository.name }}")

          if [ "$RESPONSE" == "200" ]; then
            echo "package-exists=true" >> $GITHUB_OUTPUT
            echo "‚úÖ Package exists, proceeding with cleanup"
          else
            echo "package-exists=false" >> $GITHUB_OUTPUT
            echo "üì¶ Package not found (HTTP $RESPONSE), skipping cleanup"
          fi

      - name: Delete old container images
        if: steps.check-package.outputs.package-exists == 'true'
        uses: actions/delete-package-versions@v5
        with:
          package-name: ${{ github.event.repository.name }}
          package-type: container
          min-versions-to-keep: 10
          delete-only-untagged-versions: true
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Log cleanup results
        run: |
          if [ "${{ steps.check-package.outputs.package-exists }}" == "true" ]; then
            echo "‚úÖ Cleanup process completed for package: ${{ github.event.repository.name }}"
          else
            echo "‚è≠Ô∏è  Cleanup skipped - package does not exist yet"
            echo "This is normal if no container images have been pushed to the registry."
          fi
